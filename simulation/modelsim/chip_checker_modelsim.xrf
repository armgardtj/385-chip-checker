vendor_name = ModelSim
source_file = 1, C:/Users/samra/Documents/385/Lab_Files/chip_checker/testbench.sv
source_file = 1, C:/Users/samra/Documents/385/Lab_Files/chip_checker/HexDriver.sv
source_file = 1, C:/Users/samra/Documents/385/Lab_Files/chip_checker/chip_checker.sv
source_file = 1, C:/Users/samra/Documents/385/Lab_Files/chip_checker/chip_checker_state.sv
source_file = 1, C:/Users/samra/Documents/385/Lab_Files/chip_checker/check_and.sv
source_file = 1, C:/Users/samra/Documents/385/Lab_Files/chip_checker/db/chip_checker.cbx.xml
design_name = chip_checker
instance = comp, \~QUARTUS_CREATED_GND~I , ~QUARTUS_CREATED_GND~I, chip_checker, 1
instance = comp, \HEX0[0]~output , HEX0[0]~output, chip_checker, 1
instance = comp, \HEX0[1]~output , HEX0[1]~output, chip_checker, 1
instance = comp, \HEX0[2]~output , HEX0[2]~output, chip_checker, 1
instance = comp, \HEX0[3]~output , HEX0[3]~output, chip_checker, 1
instance = comp, \HEX0[4]~output , HEX0[4]~output, chip_checker, 1
instance = comp, \HEX0[5]~output , HEX0[5]~output, chip_checker, 1
instance = comp, \HEX0[6]~output , HEX0[6]~output, chip_checker, 1
instance = comp, \HEX1[0]~output , HEX1[0]~output, chip_checker, 1
instance = comp, \HEX1[1]~output , HEX1[1]~output, chip_checker, 1
instance = comp, \HEX1[2]~output , HEX1[2]~output, chip_checker, 1
instance = comp, \HEX1[3]~output , HEX1[3]~output, chip_checker, 1
instance = comp, \HEX1[4]~output , HEX1[4]~output, chip_checker, 1
instance = comp, \HEX1[5]~output , HEX1[5]~output, chip_checker, 1
instance = comp, \HEX1[6]~output , HEX1[6]~output, chip_checker, 1
instance = comp, \HEX2[0]~output , HEX2[0]~output, chip_checker, 1
instance = comp, \HEX2[1]~output , HEX2[1]~output, chip_checker, 1
instance = comp, \HEX2[2]~output , HEX2[2]~output, chip_checker, 1
instance = comp, \HEX2[3]~output , HEX2[3]~output, chip_checker, 1
instance = comp, \HEX2[4]~output , HEX2[4]~output, chip_checker, 1
instance = comp, \HEX2[5]~output , HEX2[5]~output, chip_checker, 1
instance = comp, \HEX2[6]~output , HEX2[6]~output, chip_checker, 1
instance = comp, \HEX3[0]~output , HEX3[0]~output, chip_checker, 1
instance = comp, \HEX3[1]~output , HEX3[1]~output, chip_checker, 1
instance = comp, \HEX3[2]~output , HEX3[2]~output, chip_checker, 1
instance = comp, \HEX3[3]~output , HEX3[3]~output, chip_checker, 1
instance = comp, \HEX3[4]~output , HEX3[4]~output, chip_checker, 1
instance = comp, \HEX3[5]~output , HEX3[5]~output, chip_checker, 1
instance = comp, \HEX3[6]~output , HEX3[6]~output, chip_checker, 1
instance = comp, \HEX4[0]~output , HEX4[0]~output, chip_checker, 1
instance = comp, \HEX4[1]~output , HEX4[1]~output, chip_checker, 1
instance = comp, \HEX4[2]~output , HEX4[2]~output, chip_checker, 1
instance = comp, \HEX4[3]~output , HEX4[3]~output, chip_checker, 1
instance = comp, \HEX4[4]~output , HEX4[4]~output, chip_checker, 1
instance = comp, \HEX4[5]~output , HEX4[5]~output, chip_checker, 1
instance = comp, \HEX4[6]~output , HEX4[6]~output, chip_checker, 1
instance = comp, \HEX5[0]~output , HEX5[0]~output, chip_checker, 1
instance = comp, \HEX5[1]~output , HEX5[1]~output, chip_checker, 1
instance = comp, \HEX5[2]~output , HEX5[2]~output, chip_checker, 1
instance = comp, \HEX5[3]~output , HEX5[3]~output, chip_checker, 1
instance = comp, \HEX5[4]~output , HEX5[4]~output, chip_checker, 1
instance = comp, \HEX5[5]~output , HEX5[5]~output, chip_checker, 1
instance = comp, \HEX5[6]~output , HEX5[6]~output, chip_checker, 1
instance = comp, \Pin13~output , Pin13~output, chip_checker, 1
instance = comp, \Pin12~output , Pin12~output, chip_checker, 1
instance = comp, \Pin10~output , Pin10~output, chip_checker, 1
instance = comp, \Pin9~output , Pin9~output, chip_checker, 1
instance = comp, \Pin5~output , Pin5~output, chip_checker, 1
instance = comp, \Pin4~output , Pin4~output, chip_checker, 1
instance = comp, \Pin2~output , Pin2~output, chip_checker, 1
instance = comp, \Pin1~output , Pin1~output, chip_checker, 1
instance = comp, \Clk~input , Clk~input, chip_checker, 1
instance = comp, \Clk~inputclkctrl , Clk~inputclkctrl, chip_checker, 1
instance = comp, \Reset~input , Reset~input, chip_checker, 1
instance = comp, \Run~input , Run~input, chip_checker, 1
instance = comp, \chip_checker_state0|State~16 , chip_checker_state0|State~16, chip_checker, 1
instance = comp, \chip_checker_state0|State.Halted , chip_checker_state0|State.Halted, chip_checker, 1
instance = comp, \SW[8]~input , SW[8]~input, chip_checker, 1
instance = comp, \SW[6]~input , SW[6]~input, chip_checker, 1
instance = comp, \SW[4]~input , SW[4]~input, chip_checker, 1
instance = comp, \SW[5]~input , SW[5]~input, chip_checker, 1
instance = comp, \SW[7]~input , SW[7]~input, chip_checker, 1
instance = comp, \Equal0~2 , Equal0~2, chip_checker, 1
instance = comp, \SW[9]~input , SW[9]~input, chip_checker, 1
instance = comp, \SW[1]~input , SW[1]~input, chip_checker, 1
instance = comp, \SW[0]~input , SW[0]~input, chip_checker, 1
instance = comp, \SW[2]~input , SW[2]~input, chip_checker, 1
instance = comp, \SW[3]~input , SW[3]~input, chip_checker, 1
instance = comp, \Equal0~1 , Equal0~1, chip_checker, 1
instance = comp, \Equal0~3 , Equal0~3, chip_checker, 1
instance = comp, \chip_checker_state0|State~14 , chip_checker_state0|State~14, chip_checker, 1
instance = comp, \chip_checker_state0|State.DispResult , chip_checker_state0|State.DispResult, chip_checker, 1
instance = comp, \chip_checker_state0|State~19 , chip_checker_state0|State~19, chip_checker, 1
instance = comp, \chip_checker_state0|State.Choose1 , chip_checker_state0|State.Choose1, chip_checker, 1
instance = comp, \chip_checker_state0|State~18 , chip_checker_state0|State~18, chip_checker, 1
instance = comp, \chip_checker_state0|State.Choose2 , chip_checker_state0|State.Choose2, chip_checker, 1
instance = comp, \chip_Quad_2_input_NAND0|State~20 , chip_Quad_2_input_NAND0|State~20, chip_checker, 1
instance = comp, \chip_Quad_2_input_NAND0|State~21 , chip_Quad_2_input_NAND0|State~21, chip_checker, 1
instance = comp, \chip_Quad_2_input_NAND0|State.Halted , chip_Quad_2_input_NAND0|State.Halted, chip_checker, 1
instance = comp, \chip_Quad_2_input_NAND0|State~22 , chip_Quad_2_input_NAND0|State~22, chip_checker, 1
instance = comp, \chip_Quad_2_input_NAND0|State.Set , chip_Quad_2_input_NAND0|State.Set, chip_checker, 1
instance = comp, \chip_Quad_2_input_NAND0|State~18 , chip_Quad_2_input_NAND0|State~18, chip_checker, 1
instance = comp, \chip_Quad_2_input_NAND0|State.LowLow , chip_Quad_2_input_NAND0|State.LowLow, chip_checker, 1
instance = comp, \chip_Quad_2_input_NAND0|State~17 , chip_Quad_2_input_NAND0|State~17, chip_checker, 1
instance = comp, \chip_Quad_2_input_NAND0|State.LowHigh , chip_Quad_2_input_NAND0|State.LowHigh, chip_checker, 1
instance = comp, \chip_Quad_2_input_NAND0|State~15 , chip_Quad_2_input_NAND0|State~15, chip_checker, 1
instance = comp, \chip_Quad_2_input_NAND0|State.HighLow , chip_Quad_2_input_NAND0|State.HighLow, chip_checker, 1
instance = comp, \chip_Quad_2_input_NAND0|State~16 , chip_Quad_2_input_NAND0|State~16, chip_checker, 1
instance = comp, \chip_Quad_2_input_NAND0|State.HighHigh , chip_Quad_2_input_NAND0|State.HighHigh, chip_checker, 1
instance = comp, \chip_Quad_2_input_NAND0|State~19 , chip_Quad_2_input_NAND0|State~19, chip_checker, 1
instance = comp, \chip_Quad_2_input_NAND0|State.Done_s , chip_Quad_2_input_NAND0|State.Done_s, chip_checker, 1
instance = comp, \Selector1~0 , Selector1~0, chip_checker, 1
instance = comp, \chip_checker_state0|State~17 , chip_checker_state0|State~17, chip_checker, 1
instance = comp, \chip_checker_state0|State.Choose3 , chip_checker_state0|State.Choose3, chip_checker, 1
instance = comp, \chip_checker_state0|State~15 , chip_checker_state0|State~15, chip_checker, 1
instance = comp, \chip_checker_state0|State.GetResult , chip_checker_state0|State.GetResult, chip_checker, 1
instance = comp, \chip_checker_state0|WideOr5~0 , chip_checker_state0|WideOr5~0, chip_checker, 1
instance = comp, \chip_Quad_2_input_NAND0|RSLT~0 , chip_Quad_2_input_NAND0|RSLT~0, chip_checker, 1
instance = comp, \Pin11~input , Pin11~input, chip_checker, 1
instance = comp, \chip_Quad_2_input_NAND0|RSLT~1 , chip_Quad_2_input_NAND0|RSLT~1, chip_checker, 1
instance = comp, \chip_Quad_2_input_NAND0|RSLT~2 , chip_Quad_2_input_NAND0|RSLT~2, chip_checker, 1
instance = comp, \chip_Quad_2_input_NAND0|RSLT~3 , chip_Quad_2_input_NAND0|RSLT~3, chip_checker, 1
instance = comp, \chip_Quad_2_input_NAND0|RSLT , chip_Quad_2_input_NAND0|RSLT, chip_checker, 1
instance = comp, \RSLT~0 , RSLT~0, chip_checker, 1
instance = comp, \RSLT~1 , RSLT~1, chip_checker, 1
instance = comp, \hex0in[3]~5 , hex0in[3]~5, chip_checker, 1
instance = comp, \hex0in[2]~4 , hex0in[2]~4, chip_checker, 1
instance = comp, \hex0in[0]~6 , hex0in[0]~6, chip_checker, 1
instance = comp, \hex0in[1]~3 , hex0in[1]~3, chip_checker, 1
instance = comp, \AHex0|WideOr6~0 , AHex0|WideOr6~0, chip_checker, 1
instance = comp, \AHex0|WideOr5~0 , AHex0|WideOr5~0, chip_checker, 1
instance = comp, \AHex0|WideOr4~0 , AHex0|WideOr4~0, chip_checker, 1
instance = comp, \AHex0|WideOr3~0 , AHex0|WideOr3~0, chip_checker, 1
instance = comp, \AHex0|WideOr2~0 , AHex0|WideOr2~0, chip_checker, 1
instance = comp, \AHex0|WideOr1~0 , AHex0|WideOr1~0, chip_checker, 1
instance = comp, \AHex0|WideOr0~0 , AHex0|WideOr0~0, chip_checker, 1
instance = comp, \hex1in[3]~4 , hex1in[3]~4, chip_checker, 1
instance = comp, \hex1in[2]~3 , hex1in[2]~3, chip_checker, 1
instance = comp, \hex1in[0]~5 , hex1in[0]~5, chip_checker, 1
instance = comp, \hex1in[1]~2 , hex1in[1]~2, chip_checker, 1
instance = comp, \AHex1|WideOr6~0 , AHex1|WideOr6~0, chip_checker, 1
instance = comp, \AHex1|WideOr5~0 , AHex1|WideOr5~0, chip_checker, 1
instance = comp, \AHex1|WideOr4~0 , AHex1|WideOr4~0, chip_checker, 1
instance = comp, \AHex1|WideOr3~0 , AHex1|WideOr3~0, chip_checker, 1
instance = comp, \AHex1|WideOr2~0 , AHex1|WideOr2~0, chip_checker, 1
instance = comp, \AHex1|WideOr1~0 , AHex1|WideOr1~0, chip_checker, 1
instance = comp, \AHex1|WideOr0~0 , AHex1|WideOr0~0, chip_checker, 1
instance = comp, \hex0in~2 , hex0in~2, chip_checker, 1
instance = comp, \BHex0|WideOr0 , BHex0|WideOr0, chip_checker, 1
instance = comp, \Equal0~0 , Equal0~0, chip_checker, 1
instance = comp, \Mux0~0 , Mux0~0, chip_checker, 1
instance = comp, \Mux1~0 , Mux1~0, chip_checker, 1
instance = comp, \Pin8~input , Pin8~input, chip_checker, 1
instance = comp, \Pin6~input , Pin6~input, chip_checker, 1
instance = comp, \Pin3~input , Pin3~input, chip_checker, 1
instance = comp, \~QUARTUS_CREATED_UNVM~ , ~QUARTUS_CREATED_UNVM~, chip_checker, 1
instance = comp, \~QUARTUS_CREATED_ADC1~ , ~QUARTUS_CREATED_ADC1~, chip_checker, 1
instance = comp, \~QUARTUS_CREATED_ADC2~ , ~QUARTUS_CREATED_ADC2~, chip_checker, 1
design_name = hard_block
instance = comp, \~ALTERA_TMS~~ibuf , ~ALTERA_TMS~~ibuf, hard_block, 1
instance = comp, \~ALTERA_TCK~~ibuf , ~ALTERA_TCK~~ibuf, hard_block, 1
instance = comp, \~ALTERA_TDI~~ibuf , ~ALTERA_TDI~~ibuf, hard_block, 1
instance = comp, \~ALTERA_CONFIG_SEL~~ibuf , ~ALTERA_CONFIG_SEL~~ibuf, hard_block, 1
instance = comp, \~ALTERA_nCONFIG~~ibuf , ~ALTERA_nCONFIG~~ibuf, hard_block, 1
instance = comp, \~ALTERA_nSTATUS~~ibuf , ~ALTERA_nSTATUS~~ibuf, hard_block, 1
instance = comp, \~ALTERA_CONF_DONE~~ibuf , ~ALTERA_CONF_DONE~~ibuf, hard_block, 1
